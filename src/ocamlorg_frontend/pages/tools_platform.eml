let render_sidebar
~pages
?current_page
()
=
  let render_page_link ~title ~slug =
    Sidebar.sidebar_link ~title ~href:(Url.tool_page slug) ~current:(current_page = Some slug)
  in
  let render_page (page : Data.Tool_page.t) = render_page_link ~title:page.short_title ~slug:page.slug ~tag:None in
  let pages_by_category category =
    pages |> List.filter (fun (x : Data.Tool_page.t) -> x.category = category) |> List.map render_page |> String.concat "\n"
  in
  let categories =
    let unique lst =
      let rec unique' acc = function
        | [] -> List.rev acc
        | h::t -> unique' (if List.mem h acc then acc else h :: acc) t
      in
      unique' [] lst
    in
    pages |> List.map (fun (page : Data.Tool_page.t) -> page.category) |> unique
  in

  <div class="flex flex-col gap-5">
    <% categories |> List.iter (fun category -> %>
      <%s! Sidebar.sidebar_link_group category
        (
          (if category = "Rocq Platform" then Sidebar.sidebar_link ~current:(current_page = Some "platform") ~title:"The Rocq Platform" ~href:Url.platform ~tag:None else "")
          ^ pages_by_category category) %>
    <% ); %>
  </div>

let render_tool_card ~(item: Data.Tool.t) =
  <a href="<%s item.source %>" class="flex flex-col gap-1 border-2 rounded-md p-4 bg-white dark:bg-dark-card hover:border-primary dark:hover-dark-border-primary hover:ring-4 hover:ring-primary_nav_block_hover_10 dark:hover:ring-dark-primary_nav_block_hover_10">
    <div class="flex gap-4 items-center">
      <%s! Icons.tools "h-5 w-5 text-primary dark:text-dark-primary" %>
      <div class="text-primary dark:text-dark-primary text-lg font-normal"><%s item.name %></div>
    </div>
    <div class="flex gap-4 items-center mb-2">
      <div class="w-5"></div>
      <div class="text-content dark:text-dark-content h-10 w-10/12"><%s item.synopsis %></div>
    </div>
    <%s! Icons.arrow_small_right "h-5 w-5 text-primary dark:text-dark-primary rotate-45 place-self-end" %>
  </a>

let render
~(pages : Data.Tool_page.t list)
(tools : Data.Tool.t list)
=
Tools_layout.three_column_layout
~title:"Rocq Platform"
~description:"The Rocq Platform represents the best way for developers, both new and old, to write software in Rocq."
~canonical:Url.platform
~left_sidebar_html:(Some((render_sidebar ~pages ~current_page:"platform") ()))
~right_sidebar_html:None
~current:Overview
@@
  <div class="prose prose-orange max-w-none dark:prose-invert">
    <h1>The Rocq Platform</h1>
    <p>
    The Rocq Platform is a distribution of the Rocq prover together with a selection of
    libraries and plugins. The main goal of the Rocq Platform is to provide a
    distribution for developing and teaching with Rocq that is:
    </p>
    <ul>
      <li> operating system independent </li>
      <li> dependable </li>
      <li> easy to install </li>
      <li> comprehensive </li>
    </ul>
    
    <p>
      See the <a href= tools/platform-principles>Guiding Principles</a> for more on the Platform concept, and
      <a href="https://github.com/coq/ceps/blob/master/text/052-platform-release-cycle.md">CEP 52</a>
      for more on how the Platform is related to the Rocq release cycle.
    </p>

    <p>
    The Rocq Platform is based on the OCaml package manager opam and provides a set
    of scripts to compile and/or install opam, Rocq and the platform contents on macOS,
    Windows and many Linux distributions in a reliable way with consistent results.
    In addition pre-compiled binary packages or installers are provided for macOS and
    Windows.
    </p>
  
    <p>
      The Rocq Platform combines the core Rocq compiler with
      a coherent set of tools, documentation, libraries, and testing resources.
    </p>
    <p>
      Detailed instructions to install Rocq and the
      Platform tools are available in <a class="text-primary"
      href="<%s Url.installing_rocq %>">"Installing Rocq"</a>.
    <h2 class="font-bold mt-8 text-title dark:text-dark-title">The Tools of the Rocq Platform</h2>
    <p>
      The individual Rocq Platform Tools go through a lifecycle from incubation to deprecation.
      Here is a list of all Platform Tools sorted by their lifecycle state.
    </p>
    <p>
      Tools with a status of "full level" are considered stable, well maintained and suitable as basis for your own developments. 
      The full level adds many commonly used Rocq libraries, plug-ins and developments.
    </p>
    <p>
      The "optional" packages have the same maturity and maintenance level as the packages in the full level, 
      but either take a rather long time to build or have a non open source license or depend on packages 
      with non open source license.
      The interactive installation script and the Windows installer explicitly ask if you want to install these packages.
    </p>
    <p>
     The "extended level" contains packages which are in a beta stage or otherwise don't yet have the level 
     of maturity or support required for inclusion in the full level, 
     but there are plans to move them to the full level in a future release of Rocq Platform. 
     The main point of the extended level is advertisement: users are important to bring a development 
     from a beta to a release state.
    </p>
  </div>
  <div class="flex flex-col mb-12">
    <div>
      <hr class="mt-12 mb-6 border-separator_20 border-t border-separator_30">
      <h4 class="text-title dark:text-dark-title font-bold">Full Level</h4>
      <div class="text-content dark:text-dark-content mt-3">
        The full level adds many commonly used Rocq libraries, plug-ins and developments.
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:pr-20 mt-8 items-start">
        <% tools |> List.filter (fun (item : Data.Tool.t) -> item.lifecycle = `Full) |> List.iter (fun (item : Data.Tool.t) -> %>
          <%s! render_tool_card ~item %>
        <% ); %>
      </div>
    </div>
    <div class="mt-8">
      <hr class="mb-6 border-b border-separator_20 dark:border-dark-separator_30 ">
      <h4 class="font-bold text-title dark:text-dark-title">Optional</h4>
      <div class="text-content dark:text-dark-content mt-3">
        The optional packages have the same maturity and maintenance level as the packages in the full level, 
        but either take a rather long time to build or have a non open source license or depend on 
        packages with non open source license.
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:pr-20 mt-8 items-start">
        <% tools |> List.filter (fun (item : Data.Tool.t) -> item.lifecycle = `Optional) |> List.iter (fun (item : Data.Tool.t) -> %>
          <%s! render_tool_card ~item %>
        <% ); %>
      </div>
    </div>
    <div class="mt-8">
      <hr class="mb-6 border-b border-separator_20 dark:border-dark-separator_30 ">
      <h4 class="font-bold text-title dark:text-dark-title">Extended Level</h4>
      <div class="text-content dark:text-dark-content mt-3">
        The extended level contains packages which are in a beta stage or otherwise don't yet 
        have the level of maturity or support required for inclusion in the full level, but there 
        are plans to move them to the full level in a future release of Rocq Platform. 
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:pr-20 mt-8 items-start">
        <% tools |> List.filter (fun (item : Data.Tool.t) -> item.lifecycle = `Extended) |> List.iter (fun (item : Data.Tool.t) -> %>
          <%s! render_tool_card ~item %>
        <% ); %>
      </div>
    </div>
    <div class="mt-8">
      <hr class="mb-6 border-b border-separator_20 dark:border-dark-separator_30 ">
      <h4 class="font-bold text-title dark:text-dark-title">Dependency</h4>
      <div class="text-content dark:text-dark-content mt-3">
        In addition the dependencies listed below are partially or fully included or required during build time. 
        Please note, that the version numbers given are the versions of opam packages, which do not always match with 
        the version of the supplied packages. 
        E.g. some opam packages just refer to latest packages e.g. installed by MacPorts, 
        Homebrew or Linux system package managers.      
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:pr-20 mt-8 items-start">
        <% tools |> List.filter (fun (item : Data.Tool.t) -> item.lifecycle = `Dependency) |> List.iter (fun (item : Data.Tool.t) -> %>
          <%s! render_tool_card ~item %>
        <% ); %>
      </div>
    </div>
  </div>

