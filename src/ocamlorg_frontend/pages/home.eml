let package_card ~href ~img_path ~name description =
  <a href="<%s href %>" target="_blank"
    class="bg-background dark:bg-dark-background text-title dark:text-dark-title  p-4 rounded-xl flex md:gap-2 items-center card dark:dark-card">
      <div class="w-4/12">
        <img src="<%s Ocamlorg_static.Asset.url img_path %>" alt="<%s name %> logo" class="w-1/2 md:w-2/3">
      </div>
      <div class="flex-col w-8/12">
        <div class="text-base font-semibold"><%s name %></div>
        <div class="font-normal text-xs mt-1">
          <%s description %>
        </div>
      </div>
  </a>
  
let render
  ~(latest_release: Data.Release.t)
  ~(lts_release: Data.Release.t)
  ~(releases : Data.Release.t list)
  ~(changelogs : Data.Changelog.t list)
=
Layout.render
~use_swiper:true
~title:"Welcome to a World of Rocq"
~description:"Rocq is a general-purpose, industrial-strength interactive theorem prover."
~use_alectryon:true
~canonical:"" @@
<div class="lg:-mt-20 lg:pb-32 lg:pt-44 py-2 bg-sand dark:dark-intro-section-simple">
  <div class="container-fluid space-y-24 lg:space-y-32">
    <div class="flex flex-col lg:flex-row gap-6">
      <div class="lg:flex-1 my-2 justify-center text-center">
        <h1 class="flex justify-center">
          <img src="<%s Ocamlorg_static.Asset.url "logo-with-name.svg" %>" alt="Rocq logo" class="dark:hidden max-w-xl">
          <img src="<%s Ocamlorg_static.Asset.url "logo-with-name-orange-white.svg" %>" alt="Rocq logo" class="hidden dark:inline max-w-xl">
        </h1>
        <p class="my-7 text-2xl text-content dark:text-dark-content">
          An industrial-strength interactive theorem prover and dependently-typed programming language
          for mathematics, computer science and mechanised reasoning in general.
        </p>
        <div class="space-x-0 lg:space-x-6">
          <a class="btn btn-lg mb-4 lg:mb-0" href="<%s Url.install %>">Install</a>
          <a class="btn btn-lg btn-ghost" href="<%s Url.about %>">
            About Rocq
          </a>
        </div>
        <div class="mt-6">
          <a class="text-1xl text-primary dark:text-dark-primary font-semibold" href="<%s Url.release latest_release.version %>">Latest release: <%s latest_release.version %></a>
        </div>
        <!--<div class="mt-2">
          <a class="text-2xl text-primary dark:text-dark-primary font-semibold" href="<%s Url.release lts_release.version %>">Long Term Support release: <%s lts_release.version %></a>
        </div>
      -->

      </div>
    </div>
  </div>
</div>

<div class="py-12 lg:py-24 py-2">
  <div class="items-center container-fluid flex">
    <div class=" items-center lg:flex-1 lg:mt-16 my-12">
      <h2 class="font-bold text-title dark:text-dark-title">Trusted by Industry Leaders</h2>
      <div class="text-content dark:text-dark-content text-base mt-3">
        These companies and organisations rely on Rocq every day â€” along with hundreds of other researchers. See <a href="<%s Url.industrial_users %>" class="text-primary dark:text-dark-primary">Success Stories</a>
      </div>
      <div class="flex flex-row justify-center m-auto flex-wrap py-8 items-center">
          <div class="mx-4 my-4 dark:bg-dark-white py-4 px-12 rounded-md">
              <img class="h-12" src="<%s Ocamlorg_static.Asset.url "logos/bluerock-logo.png" %>" alt="BlueRock">
          </div>
          <div class="mx-4 my-4 dark:bg-dark-white py-4 px-12 rounded-md">
              <img class="h-8" src="<%s Ocamlorg_static.Asset.url "logos/formalv_logo.gif" %>" alt="Formal Vindication">
          </div>
          <div class="mx-4 my-4 dark:bg-dark-white py-4 px-12 rounded-md">
              <img class="h-8" src="<%s Ocamlorg_static.Asset.url "logos/Google_logo.svg" %>" alt="Google">
          </div>
      </div>

    </div>
      <div class="lg:flex-1 flex justify-center">
            <div class="bg-code-background flex flex-col w-full max-w-xl min-w-xl rounded-3xl codebox">
              <div class="border-solid border-b border-gray-50 border-opacity-30 p-5">
                <div class="flex space-x-2 mt-2">
                  <div class="h-3 w-3 rounded-full border-2 border-solid border-orange-500 border-opacity-80"></div>
                  <div class="h-3 w-3 rounded-full border-2 border-solid border-yellow-500 border-opacity-80"></div>
                  <div class="h-3 w-3 rounded-full border-2 border-solid border-green-500 border-opacity-80"></div>
                </div>
              </div>
              <div style="flex: 1 1 50%" class="py-2 px-6 text-opacity-50 overflow-auto bg-white">
                

                <div class="alectryon-root alectryon-centered"><div class="document">
<pre class="alectryon-io highlight"><!-- Generator: Alectryon --><span class="alectryon-sentence"><span class="alectryon-input"><span class="kn">Definition</span> <span class="nf">square</span> <span class="nv">x</span> := x * x.</span><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk0" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk0"><span class="kn">Eval</span> <span class="nb">compute</span> <span class="kr">in</span> square <span class="mi">3</span>.</label><small class="alectryon-output"><div><div class="alectryon-messages"><blockquote class="alectryon-message">= <span class="mi">9</span>
: nat</blockquote></div></div></small><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><span class="alectryon-input"><span class="kn">Fixpoint</span> <span class="nf">fac</span> <span class="nv">n</span> :=
  <span class="kr">match</span> n <span class="kr">with</span>
  | <span class="mi">0</span> | <span class="mi">1</span> =&gt; <span class="mi">1</span>
  | S n&#39; =&gt; n * fac n&#39;
  <span class="kr">end</span>.</span><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk1" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk1"><span class="kn">Eval</span> <span class="nb">compute</span> <span class="kr">in</span> fac <span class="mi">5</span>.</label><small class="alectryon-output"><div><div class="alectryon-messages"><blockquote class="alectryon-message">= <span class="mi">120</span>
: nat</blockquote></div></div></small><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk2" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk2"><span class="kn">Lemma</span> <span class="nf">square_pos</span> : <span class="kr">forall</span> <span class="nv">n</span>, n &gt; <span class="mi">0</span> -&gt; square n &gt; <span class="mi">0</span>.</label><small class="alectryon-output"><div><div class="alectryon-goals"><blockquote class="alectryon-goal"><span class="goal-separator"><hr></span><div class="goal-conclusion"><span class="kr">forall</span> <span class="nv">n</span> : nat, n &gt; <span class="mi">0</span> -&gt; square n &gt; <span class="mi">0</span></div></blockquote></div></div></small><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk3" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk3"><span class="kn">Proof</span>.</label><small class="alectryon-output"><div><div class="alectryon-goals"><blockquote class="alectryon-goal"><span class="goal-separator"><hr></span><div class="goal-conclusion"><span class="kr">forall</span> <span class="nv">n</span> : nat, n &gt; <span class="mi">0</span> -&gt; square n &gt; <span class="mi">0</span></div></blockquote></div></div></small><span class="alectryon-wsp">
</span></span><span class="alectryon-wsp">   </span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk4" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk4"><span class="nb">induction</span> n <span class="kr">as</span> [|n IHn].</label><small class="alectryon-output"><div><div class="alectryon-goals"><blockquote class="alectryon-goal"><span class="goal-separator"><hr></span><div class="goal-conclusion"><span class="mi">0</span> &gt; <span class="mi">0</span> -&gt; square <span class="mi">0</span> &gt; <span class="mi">0</span></div></blockquote><div class="alectryon-extra-goals"><input class="alectryon-extra-goal-toggle" id="square-v-chk5" style="display: none" type="checkbox"><blockquote class="alectryon-goal"><div class="goal-hyps"><span><var>n</var><span class="hyp-type"><b>: </b><span>nat</span></span></span><br><span><var>IHn</var><span class="hyp-type"><b>: </b><span>n &gt; <span class="mi">0</span> -&gt; square n &gt; <span class="mi">0</span></span></span></span><br></div><label class="goal-separator" for="square-v-chk5"><hr></label><div class="goal-conclusion">S n &gt; <span class="mi">0</span> -&gt; square (S n) &gt; <span class="mi">0</span></div></blockquote></div></div></div></small><span class="alectryon-wsp">
</span></span><span class="alectryon-wsp">   </span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk6" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk6">-</label><small class="alectryon-output"><div><div class="alectryon-goals"><blockquote class="alectryon-goal"><span class="goal-separator"><hr></span><div class="goal-conclusion"><span class="mi">0</span> &gt; <span class="mi">0</span> -&gt; square <span class="mi">0</span> &gt; <span class="mi">0</span></div></blockquote></div></div></small><span class="alectryon-wsp"> </span></span><span class="alectryon-sentence"><span class="alectryon-input"><span class="nb">trivial</span>.</span><span class="alectryon-wsp">
</span></span><span class="alectryon-wsp">   </span><span class="alectryon-sentence"><input class="alectryon-toggle" id="square-v-chk7" style="display: none" type="checkbox"><label class="alectryon-input" for="square-v-chk7">-</label><small class="alectryon-output"><div><div class="alectryon-goals"><blockquote class="alectryon-goal"><div class="goal-hyps"><span><var>n</var><span class="hyp-type"><b>: </b><span>nat</span></span></span><br><span><var>IHn</var><span class="hyp-type"><b>: </b><span>n &gt; <span class="mi">0</span> -&gt; square n &gt; <span class="mi">0</span></span></span></span><br></div><span class="goal-separator"><hr></span><div class="goal-conclusion">S n &gt; <span class="mi">0</span> -&gt; square (S n) &gt; <span class="mi">0</span></div></blockquote></div></div></small><span class="alectryon-wsp"> </span></span><span class="alectryon-sentence"><span class="alectryon-input"><span class="bp">now</span> <span class="nb">unfold</span> square; <span class="bp">lia</span>.</span><span class="alectryon-wsp">
</span></span><span class="alectryon-sentence"><span class="alectryon-input"><span class="kn">Qed</span>.</span></span>
</pre>
                
                </div>
              </div>
              <div class="flex-1 flex py-2 px-6 text-white text-opacity-50">
                <a
                  href="<%s Url.playground %>"
                  class="px-4 ml-2 h-10 text-sm items-center text-white border border-gray-100 rounded-lg border-opacity-50 flex">
                  <%s! Icons.edit "h-5 w-5 mr-2" %>
                  Try the Playground
                </a>
              </div>
            </div>
          </div>
  </div>
</div>

<div class="py-8 md:py-12 py-2 bg-acm-award">
  <div class="container-fluid space-y-24 lg:space-y-32">
    <div class="text-center md:text-left flex flex-col md:flex-row gap-6">
      <div class="md:w-60">
        <img class="mx-auto w-40" src="<%s Ocamlorg_static.Asset.url "img/acm_award_banner/acm_award_cup.svg" %>" alt="illustration of a cup">
      </div>
      <div class="space-y-6">
        <h2 class="font-regular text-white">The <strong>Rocq Prover</strong> has been <strong>recognised</strong> by <strong>SIGPLAN</strong> for their prestigious Programming Languages Software Award</h2>
        <div class="text-xl text-white mt-3 italic">
          The recipients of the award are thanking all developers who contributed to the success of the Rocq Prover.
        </div>
        <div class="inline-flex md:flex gap-8">
        <a class="btn btn-md" href="https://coq.inria.fr/news/coq-received-acm-software-system-2013-award.html">Read more</a>
        <div class="hidden md:block md:flex-grow">
          <img class="ml-auto" src="<%s Ocamlorg_static.Asset.url "img/acm_award_banner/acm_logo.png" %>" alt="illustration of a cup">
        </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="bg-background dark:bg-dark-background">
  <div class="container-fluid">
    <h2 class="font-bold text-center text-title dark:text-dark-title pt-12">Why Rocq?</h2>
    <div class="pt-4 pb-24 lg:pt-24 space-y-20 md:space-y-40">
      <div class="flex gap-10 lg:gap-24 flex-col lg:flex-row-reverse justify-between items-center">
        <div class="lg:flex-1 mt-10 lg:mt-0">
          <div class="text-base">
            <div class="h-12 w-12 text-white rounded-xl flex bg-gradient-to-br from-blue-400 to-blue-600">
              <%s! Icons.shield_check "h-7 w-7 m-auto" %>
            </div>
            <h3>
              <div class="text-lg my-4 font-bold" style="color: #225b90">
                RELIABILITY
              </div>
              <p class="text-title dark:text-dark-title font-bold">Powerful Type Safety Made Simple</p>
            </h3>
            <p class="my-4 text-lg text-content dark:text-dark-content">
              Rocq's highly expressive type system and proof language enable fully mechanised verification 
              of programs with respect to strong specifications and of mathematical statements. 
              Its well-studied core type theory implemented in a well-delimited kernel using the performant 
              and safe OCaml programming language provides the highest possible guarantees on mechanised artifacts. 
              The core type theory is itself formalised in Rocq in the MetaRocq project, a verified reference checker 
              is proven correct and complete with respect to this specification and can be extracted to reduce the 
              trusted code base of any formalization to the specification of Rocq's theory and the user specification.
              <!-- OCaml empowers you to create mission-critical software with
              highest security- and safety-requirements in environments with
              ever-changing requirements! -->
            </p>
          </div>
        </div>
        <div class="lg:flex-1 lg:mt-0 mt-10 flex justify-center">
          <img src="<%s Ocamlorg_static.Asset.url "img/home/safe-stable.svg" %>" alt="An example OCaml program defining nested lists in OCaml. A terminal output also shows the compiler catching a type error where a pattern-match was not exhaustive.">
        </div>
      </div>
      <div class="flex gap-10 lg:gap-24 flex-col lg:flex-row justify-between">
         <div class="lg:flex-1 mt-10 lg:mt-0 flex items-center">
          <div class="text-base">
            <div class="h-12 w-12 text-white rounded-xl flex bg-gradient-to-br from-purple-400 to-purple-600">
              <%s! Icons.home_tooling "h-7 w-7 m-auto" %>
            </div>
            <div class="text-lg my-4 font-bold text-purple-600">
              PRODUCTIVITY
            </div>
            <h3 class="text-title dark:text-dark-title font-bold">
              First-Class Editor and Tooling
            </h3>
            <p class="my-4 text-lg text-content dark:text-dark-content">
              Rocq comes with deep integrations for VS Code, Vim or Emacs to provide type inspection, autocomplete and more.
              Between Opam, a popular package manager; and <code>Alectryon</code>,
              an easy-to-use documentation generator, Rocq users have access to a complete, modern developer experience.
            </p>
          </div>
        </div>
        <div class="lg:flex-1 lg:mt-0 mt-10 flex justify-center">
          <div style="--swiper-navigation-color: #fff;--swiper-pagination-color: #fff;" class="swiper mySwiper">
            <div class="swiper-wrapper">
              <div class="swiper-slide">
                <div>
                  <img src="<%s Ocamlorg_static.Asset.url "logos/vscode.svg" %>" width="56" alt="VS Code">
                  <img src="<%s Ocamlorg_static.Asset.url "img/home/vscode-preview.png" %>" alt="">
                </div>
              </div>
              <div class="swiper-slide">
                <div>
                <img src="<%s Ocamlorg_static.Asset.url "logos/vim.svg" %>" width="56" alt="Vim">
                <img src="<%s Ocamlorg_static.Asset.url "img/home/vim-preview.png" %>" alt="">
                </div>
              </div>
              <div class="swiper-slide">
                <div>
                <img src="<%s Ocamlorg_static.Asset.url "logos/emacs.svg" %>" width="56" alt="Emacs">
                <img src="<%s Ocamlorg_static.Asset.url "img/home/emac-preview.png" %>" alt="">
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="flex gap-10 lg:gap-24 flex-col lg:flex-row-reverse justify-between">
        <div class="lg:flex-1">
          <div class="text-base">
            <div class="h-12 w-12 text-white dark:text-dark-white rounded-xl flex bg-gradient-to-br from-teal-400 to-teal-600">
              <%s! Icons.lightning "h-7 w-7 m-auto" %>
            </div>
            <h3>
              <div class="text-lg my-4 font-bold text-secondary dark:text-dark-secondary">PERFORMANCE</div>
              <div class="text-title dark:text-dark-title font-bold">
                Fast Compiler and Applications
              </div>
            </h3>
            <p class="my-4 font-normal text-lg text-content dark:text-dark-content">
              OCaml offers great runtime performance without compromising on developer experience:
              The bytecode compiler generates small, highly portable executables blazingly fast;
              the native code compiler produces highly-efficient machine code. Despite this focus
              on performance, the OCaml compiler has always been exceptionally reliable and stable
            </p>
          </div>
        </div>
        <div class="lg:flex-1 lg:mt-0 mt-10 flex justify-center">
          <img src="<%s Ocamlorg_static.Asset.url "img/home/workfaster.svg" %>" alt="">
        </div>
      </div>
    </div>
  </div>
</div>
<div class="py-24 overflow-hidden">
  <div class="container-fluid">
    <div class="prose dark:prose-invert mx-auto">
        <h2 class="font-bold">Exceptionally Robust and Reliable</h2>
        <blockquote class="font-normal">
        Despite all this testing, we have never had a single XenServer defect reported from
        internal testing or from the field that can be traced back to a bug in the
        OCaml runtime or compiler. (During development we did once find a minor compiler bug,
        triggered when compiling auto-generated OCaml code with many function arguments,
        but this was already fixed in the development branch by the time we reported it
        and so no interaction with the maintainers at INRIA was required.)
        </blockquote>

        -- Scott, D. & Sharp, R. & Gazagnaire, T. & Madhavapeddy, A. (2010).
          <a href="https://anil.recoil.org/papers/2010-icfp-xen.pdf">Using Functional Programming within an Industrial Product Group: Perspectives and Perceptions.</a>
          ACM SIGPLAN Notices. 45. 87-92. 10.1145/1863543.1863557.
    </div>
  </div>
</div>
<div class="bg-background dark:bg-dark-background pt-24 pb-14 overflow-hidden">
  <div class="container-fluid grid grid-cols-1 lg:grid-cols-2 gap-10 items-stretch mb-14"> 
      <div class="flex flex-col">
        <h3 class="font-bold text-title dark:text-dark-title">Releases</h3>
        <div class="flex-grow p-10 mt-7 bg-white dark:bg-dark-card border rounded-2xl h-full">
        <div class="text-primary dark:text-dark-primary text-sm mb-4 uppercase">Recent Releases</div>
      
        <% releases |> List.iter (fun (item : Data.Release.t) -> %>
          <div class="mb-4">
          <a href="<%s Url.release item.version %>">
            <h3 class="font-bold mb-6 text-title dark:text-dark-title hover:underline">
              <%s item.version %> <span class="text-sm">(<%s item.date %>)</span>
            </h3>
          </a>
          <div class="prose dark:prose-invert prose-sm"><%s! item.highlights_html %></div>
           </div>
        <% ); %>
       
          <a href="<%s Url.releases %>" class="btn btn-ghost rounded mt-8">
            <span>See All Releases</span>
            <%s! Icons.chevron_right "h-5 w-5" %>
          </a>
       </div>
      </div>
      <div class="flex flex-col">
          <h3 class="font-bold text-title dark:text-dark-title">Changelog</h3>
          <div class="flex-grow p-10 mt-7 bg-white dark:bg-dark-card border rounded-2xl h-full">
            <a href="<%s Url.changelog %>">
            <div class="text-primary dark:text-dark-primary text-sm mb-4 uppercase">Releases & Updates</div>
            <h3 class="font-bold mb-6 text-title dark:text-dark-title">
              Compiler and Platform Tools
            </h3>
            </a>
            <% let changelogs_length = List.length changelogs in changelogs |> 
                    List.iteri (fun index (item : Data.Changelog.t) -> %>
            <div class="<%s if index = changelogs_length - 1 then "pl-8" else "pl-8 border-l-2 border-separator_20 dark:border-dark-separator_30" %>">
              <div class="flex flex-col">   
                <div class="mb-6">
                    <div class="relative pb-2">
                        <div class="absolute block -left-11 w-6 h-6 mt-0.5 text-primary dark:text-dark-primary bg-white dark:bg-dark-card">
                          <%s! Icons.changelog "w-6 h-6" %>
                        </div>
                        <a href="<%s Url.changelog_entry item.slug %>" class="my-0 font-sans text-xl tracking-normal font-extrabold leading-7 changelog-title whitespace-normal break-all text-title dark:text-dark-title hover:underline"><%s item.title %></a>
                        <time datetime="<%s item.date %>" class="block mt-1 font-sans text-sm text-content dark:text-dark-content"><%s Utils.human_date item.date %></time>
                    </div>
                    <p class="prose dark:prose-invert prose-orange">
                      <%s! String.sub item.body 0 (min (String.length item.body - 1) 100) %>...
                    </p>
                    <a href="<%s Url.changelog %>" class="text-primary dark:text-dark-primary mt-2 hover:underline">
                      See full changelog
                    </a>
                </div>
              </div>
            </div>
            <% ); %>
            <a href="<%s Url.changelog %>" class="btn btn-ghost rounded mt-8">
            <span>See Full Changelog</span>
            <%s! Icons.chevron_right "h-5 w-5" %>
            </a>
          </div>
      </div>
  </div>
</div>
<div class="py-28 bg-background dark:bg-dark-background">
  <div class="container-fluid">
    <div class="px-15">
      <h2 class="text-title dark:text-dark-title font-bold mb-6">Users of Rocq</h2>
      <p class="text-lg text-content dark:text-dark-content mb-16">
        Rocq is used by hundreds of developers, companies, research labs, teachers, and more. Learn how it fits your use case.
      </p>
    </div>
    <div class="flex flex-col lg:flex-row justify-between lg:space-x-20 space-y-10 lg:space-y-0">
      <div class="shadow-lg p-10 bg-white rounded-2xl border dark:bg-dark-card">
        <div class="flex flex-row items-center justify-between relative pb-8">
          <h3 class="font-semibold text-title dark:text-dark-title">For Educators</h3>
        </div>
        <div>
          <p class="text-base text-title dark:text-dark-title">
            With its mathematical roots, OCaml has always had strong ties to academia.
            It is taught in universities around the world, and has accrued an ever-growing body of research.
            Learn more about the academic rigor that defines the culture of OCaml.
          </p>
          <a class="btn mt-10 py-8" href="<%s Url.academic_users %>">Learn more</a>
        </div>
      </div>
      <div class="shadow-lg p-10 bg-white rounded-2xl border dark:bg-dark-card">
        <div class="flex flex-row items-center justify-between relative pb-8">
          <h3 class="font-semibold text-title dark:text-dark-title">For Industrial Users</h3>
        </div>
        <div>
          <p class="text-base text-content dark:text-dark-content">
            OCaml's powerful compile-time guarantees and high performance empower
            companies to provide reliable and speedy services and products.
            Learn more about how OCaml is used in the industry: explore success stories and discover companies that use OCaml.
          </p>
          <a class="btn mt-10 py-8" href="<%s Url.industrial_users %>">Learn more</a>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="intro-section-simple dark:dark-intro-section-simple lg:py-32 py-24">
  <div class="container-fluid">
    <div class="">
      <div class="">
        <h2 class="font-bold text-title dark:text-dark-title mb-6">Curated Resources</h2>
        <p class="text-lg text-content dark:text-dark-content mb-16">
          Get up to speed quickly to enjoy the benefits of the OCaml programming language across your projects.
        </p>
      </div>
      <div class="grid lg:grid-cols-3 gap-8 lg:gap-16">
        <a href="<%s Url.install %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.play_circle "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Getting Started</p>
          <p>Install OCaml, set up your favorite text editor and start your first project.</p>
        </a>
        <a href="<%s Url.manual %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.document "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Language Manual</p>
          <p>Read the reference manual of the language and documentation on the compiler.</p>
        </a>
        <a href="<%s Url.books %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.book "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Books</p>
          <p>Discover OCaml books from expert programmers and researchers - from beginner level to advanced topics.</p>
        </a>
        <a href="<%s Url.api %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.command_line "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Standard Library</p>
          <p>Searchable API documentation.</p>
        </a>
        <a href="<%s Url.exercises %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.hand_palm "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Exercises</p>
          <p>Learn OCaml by solving problems on a variety of topics, from easy to challenging.</p>
        </a>
        <a href="<%s Url.papers %>" class="card dark:dark-card p-4 text-title dark:text-dark-title">
          <%s! Icons.papers "h-16 w-16 mb-8" %>
          <p class="font-semibold text-xl mb-3">Papers</p>
          <p>Explore papers that have influenced OCaml and other functional programming languages.</p>
        </a>
      </div>
    </div>
  </div>
</div>
<div class="bg-background dark:bg-dark-background py-20 overflow-hidden">
  <div class="container-fluid">
    <div class="grid grid-cols-1 lg:grid-cols-2 items-center">
      <div class="space-y-8">
        <div class="space-y-6">
          <h2 class="font-bold text-title dark:text-dark-title">Rocq Packages</h2>
          <p class="text-lg text-content dark:text-dark-content">
            Explore hundreds of open-source Rocq packages with their
            documentation.
          </p>
        </div>
        <a href="<%s Url.packages %>" class="btn btn-lg mt-8 flex items-center">
          <span>Explore packages</span>
          <%s! Icons.chevron_right "h-5 w-5" %>
        </a>
      </div>
    </div>
  </div>
</div>
<script>
  var swiper = new Swiper(".mySwiper", {
    loop: true,
    autoplay: { delay: 5000, disableOnInteraction: false, },
    slidesPerView: 'auto',
    spaceBetween: 10,
    thumbs: {
      swiper: swiper,
    },
  });
</script>
