  - name: coq.8.20.1
    source: https://coq.inria.fr/" rel="nofollow
    license: https://spdx.org/licenses/LGPL-2.1-only.html
    synopsis:  The Coq Proof Assistant
    description: >
      Coq is a formal proof management system. It providesa formal language to write mathematical definitions, executablealgorithms and theorems together with an environment forsemi-interactive development of machine-checked proofs.Typical applications include the certification of properties ofprogramming languages (e.g. the CompCert compiler certificationproject, or the Bedrock verified low-level programming library), theformalization of mathematics (e.g. the full formalization of theFeit-Thompson theorem or homotopy type theory) and teaching.
    lifecycle: base
  - name: dune-configurator.3.16.1
    source: https://github.com/ocaml/dune
    license: https://spdx.org/licenses/MIT.html
    synopsis:  Helper library for gathering system configuration
    description: >
      dune-configurator is a small library that helps writing OCaml scripts thattest features available on the system, in order to generate config.hfiles for instance.Among other things, dune-configurator allows one to:- test if a C program compiles- query pkg-config- import #define from OCaml header files- generate config.h file
    lifecycle: base
  - name: dune.3.16.1
    source: https://github.com/ocaml/dune
    license: https://spdx.org/licenses/MIT.html
    synopsis:  Fast, portable, and opinionated build system
    description: >
      Dune is a build system that was designed to simplify the release ofJane Street packages. It reads metadata from \dune\ files following avery simple s-expression syntax.Dune is fast, has very low-overhead, and supports parallel builds onall platforms. It has no system dependencies; all you need to builddune or packages using dune is OCaml. You don'apos;t need make or bashas long as the packages themselves don'apos;t use bash explicitly.Dune is composable; supporting multi-package development by simplydropping multiple repositories into the same directory.Dune also supports multi-context builds, such as building againstseveral opam roots/switches simultaneously. This helps maintainingpackages across several versions of OCaml and gives cross-compilationfor free.
    lifecycle: base
